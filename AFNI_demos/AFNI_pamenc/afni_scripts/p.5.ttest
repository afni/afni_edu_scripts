#!/bin/tcsh

# ===================== based on S.0.template.txt ======================

# - make a group mask

# ======================================================================
# init variables and allow command line options:
#    script_dir, study_root_in, study_root_out, deriv_dir,
#    all_subjects, nsubj
# Note that script_dir will need to be set basically every
#      time, since calling 'init_vars' will be universal.

# --------------------------------------------------
# variables to propagate to other scripts (always pass)

# the location of processing scripts (use full path)
set script_dir = `pwd`

# verbosity level
set verb = 0

set redo = 0

set allow_missing = 0

# taskname to process
set taskname = pamenc

# this corresponds to the command script that is run, c.ss.$cmd_label
# e.g. c.ss.3.make_spec
set cmd_label = 5.ggc

# are we swarming this?
set swarm = 0

# --------------------------------------------------
# variables specifiec to this script

# the name of this script
set prog = `basename $0`

# list of subjects to process
set subj_proc_list = ()

# processing directory that goes under derivatives
# ** for this script, dirs must correspond with those in c.ss.$cmd_label
# set proc_dir = AFNI_02_${taskname}.class
set proc_dir = AFNI_02_${taskname}

# ======================================================================
# process command-line arguments
set ac = 1
while ( $ac <= $#argv )
   if ( "$argv[$ac]" == "-help" ) then
      echo "$prog       - run @SSwarper for the given subjects"
      echo ""
      echo "usage: $prog [options...] subj subj ..."
      echo ""
      echo "options specific to this script"
      echo ""
      echo "  -proc_dir DIR     : root directory under 'derivates' for results"
      echo "                      default: $proc_dir"
      echo ""
      echo "general options"
      echo ""
      echo "  -help             : show help and exit"
      echo "  -verb LEVEL       : set verbosity level (2 means show commands)"
      echo "                      default: $verb"
      echo "  -allow_missing    : skip missing subjects, but proceed"
      echo "  -redo             : (delete previous and) re-create results"
      echo "  -script_dir DIR   : specify directory of processing scripts"
      echo "                      default: $script_dir"
      echo "  -swarm            : use HPC swarm for this process"
      echo ""
      exit 0
   else if ( "$argv[$ac]" == "-proc_dir" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -proc_dir: missing argument"
         exit 1
      endif
      set proc_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-allow_missing" ) then
      set allow_missing = 1
   else if ( "$argv[$ac]" == "-redo" ) then
      set redo = 1
   else if ( "$argv[$ac]" == "-script_dir" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -script_dir: missing argument"
         exit 1
      endif
      set script_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-swarm" ) then
      set swarm = 1
   else if ( "$argv[$ac]" == "-verb" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -verb: missing argument"
         exit 1
      endif

      # if 2 or more, set echo to see commands
      if ( $verb >= 2 ) set echo
   else
      # everything else should be a subject
      set subj_proc_list = ( $argv[$ac-] )
      break
   endif

   @ ac ++
end

# source the variable init file (to keep them mostly in one place)
# sets: study_root_in, study_root_out, deriv_dir, all_subjects, nsubj
source $script_dir/c.0.init_vars

# ======================================================================
# do some work...

echo "== time == starting : `date`"

# if subj_proc_list was not initialized, process everyone
if ( $#subj_proc_list == 0 ) then
   set subj_proc_list = ( $all_subjects )
   echo "++ $prog : processing all subjects"
endif
echo "-- $prog : processing $#subj_proc_list subjects"

# input directory is original, for participants.txt
set in_dir = $study_root_in

# output directory will be QC dir, in prep for group analysis
set res_dir = $deriv_dir/$proc_dir
echo "-- $prog : results will go under $res_dir"

# check I/O dirs
set missing = 0
set done    = 0
set todo    = 0
set nredo   = 0
set subjs_todo = ()

# use a version with fewer subjects and groups
# set part_file = participants.short.tsv
set part_file = participants.tsv
if ( ! -f $in_dir/$part_file ) then
   echo "** missing $part_file"
      @ missing += 1
endif
if ( ! -f $res_dir/QC/MNI152_2009_template_SSW.nii.gz ) then
   echo "** missing QC/MNI152_2009_template_SSW.nii.gz"
      @ missing += 1
endif

echo ""
echo "-- $prog datasets: $missing missing"
echo ""

   # if redo, delete old mask

# allow missing subjects?  seems like an error, but there could be reasons
if ( $missing > 0 ) then
   exit 1
endif

# run commands from top-level deriv task dir, and move into group_analysis
cd $res_dir

# NO b.slurm, since this is not subject based
if ( $verb ) then
   set vopt = "-x"
else
   set vopt = ""
endif
tcsh $vopt $script_dir/c.ss.$cmd_label SUBJ_JUNK $in_dir $res_dir

